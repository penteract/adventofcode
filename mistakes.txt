Day 1
Internet disconnecting as the problem started
Doing +2 rather than -2 (Wrong submission)

Day 2
Including a square bracket in a submission (Wrong submission)
Reusing 'i' as a variable name

Day 3

Day 4
Not being logged in

Day 5
Using == rather than =
Not incrementing the instruction pointer (in 2 places)

Day 6

Day 7
Not updating my haskell intcode interpreter
Not logging in (although this time it was faster since I'd logged in to github)

Day 8
Ambiguous variable names
Doubting my ability to read

While writing Days 5 and 7 in Haskell:
trying to use typeclasses (It was OK for day 2)
Not parsing negative numbers (I didn't realise they were in the input and ignored everything but digits)

Day 9:
Debugging Day 7 in Haskell, starting a minute late
Using Haskell
Changing 'get relative to ip' into 'get relative to offset' by adding a the offset to ip and ignoring the address

Day 10:
Not reading the question - it had to be on an asteroid. (Wrong submission)


Day 11:
missing "el"in an elif - changing state twice per output.

Day 12:

Day 13:

Day 14:
needed to check how split worked
Forgot to reset dictionary - did not notice because ORE was not in one table, and fortunately it didn't affect my answer.


Other:
len(str("DAY")) rather than len(str(DAY)) in studyscores.py

Day 15:

Day 16:
Not doing complexity analysis (block sums would have worked)

Day 17:
Trying to do part 2 by hand

Day 18:
Leaving a program running while it ate most of my memory.
Taking too long before starting on the actual solution.

Day 19:
trying (x-100,y-100) (x-100,y+100) (x+100,y+100), wrong test function, wrong output (order of y and x, not giving top left) Correct thing to test was (x-99,y+99)

Day 20:
Getting less than 5 hours sleep (expecting the same tomorrow).
Insufficiently focused when writing input processing.
Did not terminate search, so python kept running (did not affect submission time).

Day 22:
wrong keyboard layout
Not testing (too many dumb mistakes (4 wrong answers) in part 1).
Not realising the composition of 2 functions of the form x->(ax+b)%n has that form, hence hoping that there would be a cycle
