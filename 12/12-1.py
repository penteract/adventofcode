Python 3.7.1 (default, Oct 22 2018, 10:41:28) 
[GCC 8.2.1 20180831] on linux
Type "help", "copyright", "credits" or "license()" for more information.
>>> input = "#..####.##..#.##.#..#.....##..#.###.#..###....##.##.#.#....#.##.####.#..##.###.#.......#............"
>>> rules = """##... => .
##.## => .
.#.#. => #
#..#. => .
#.### => #
.###. => .
#.#.. => .
##..# => .
..... => .
...#. => .
.#..# => .
####. => #
...## => #
..### => #
#.#.# => #
###.# => #
#...# => #
..#.# => .
.##.. => #
.#... => #
.##.# => #
.#### => .
.#.## => .
..##. => .
##.#. => .
#.##. => .
#..## => .
###.. => .
....# => .
##### => #
#.... => .
..#.. => #"""
>>> r = l for l in rules.split("\n")
SyntaxError: invalid syntax
>>> r = in rules.split("\n")
SyntaxError: invalid syntax
>>> r = rules.split("\n")
>>> r
['##... => .', '##.## => .', '.#.#. => #', '#..#. => .', '#.### => #', '.###. => .', '#.#.. => .', '##..# => .', '..... => .', '...#. => .', '.#..# => .', '####. => #', '...## => #', '..### => #', '#.#.# => #', '###.# => #', '#...# => #', '..#.# => .', '.##.. => #', '.#... => #', '.##.# => #', '.#### => .', '.#.## => .', '..##. => .', '##.#. => .', '#.##. => .', '#..## => .', '###.. => .', '....# => .', '##### => #', '#.... => .', '..#.. => #']
>>> r = {x[:5]:x[-1] for x in r}
>>> len(r)
32
>>> gen(x):
	
SyntaxError: invalid syntax
>>> def gen(x):
	nx = ".."x+".."
	
SyntaxError: invalid syntax
>>> def gen(x):
	nx = ".."+x+".."
	for i in range(2,len(x)-1)
	
SyntaxError: invalid syntax
>>> def gen(x):
	xx = "...."+x+"...."
	res = []
	for i in range(2,len(xx)-2):
		res.append(r[xx[i-2:i+3]])
	return "".join(res)

>>> for i in range(20):
	input=gen(input)

	
>>> input
'..........................................#.#.#.#..#..#.....#.#......#...#...###.##..#.##.##......#...#.##.#.....##...#..#...#.........#.#......#.#.................................'
>>> len(input)
180
>>> len("#..####.##..#.##.#..#.....##..#.###.#..###....##.##.#.#....#.##.####.#..##.###.#.......#............")
100
>>> sum(i-40 for i,x in enumerate(input) if x=="#")
1696
>>> orig = "#..####.##..#.##.#..#.....##..#.###.#..###....##.##.#.#....#.##.####.#..##.###.#.......#............"
>>> input= orig
>>> for i in range(20):
	input=gen(input)
	print(input)

	
..#..#.##..#.....#....##...#.#....#.#....#.....#.#..#.##.#......#.#.##.....#.#.#..#......##.............
....#.....#..##....##..#.#.#..#.#....#.#...##.....#......#..#......##..#......###...##....#.#...............
......##....#...#...#.#...###....#.#....#.###.#.....##.....#..##....#.#..##....##...##.#.....#.#................
.......#.#....###.###..#.####.......#.#.....#.#..#...#.#.....#...#.....#....#...#.#.##.#..#.....#.#.................
..........#.#..##.#.#......#.#.........#.#.....#...###..#.#....###.##....##...###..##..#....##.....#.#..................
.............#....#.##.#......#.#.........#.#....#####.....#.#..##.#..#...#.#.###.....#..##..#.#......#.#...................
...............##......#..#......#.#.........#.#..##.##.......#....#....###..##.#.......#...#...#.#......#.#....................
................#.#......#..##......#.#.........#....#..#.......##...##..##.....#..#......###.###..#.#......#.#.....................
...................#.#.....#...#.......#.#........##...#..##.....#.#.##.#...#.....#..##....##.#.#.....#.#......#.#......................
......................#.#....###.##.......#.#......#.#.#.#...#......##..#..##.##....#...#...#.#.##.#.....#.#......#.#.......................
.........................#.#..##.#..#........#.#......#####.##.##....#.#..#...#..#....###.###..##..#..#.....#.#......#.#........................
............................#....#....##........#.#....##.###..#..#.....#...###.#..##..##.#.#.....#..#..##.....#.#......#.#.........................
..............................##...##..#.#.........#.#..#.#.#....#..##....#####.#.....#...#.##.#....#..#...#......#.#......#.#..........................
...............................#.#.##.#...#.#.........#....###.#...#...#...##.###..#....###....#..#...#..###.##......#.#......#.#...........................
..................................##..#..##..#.#........##..##.#..##.###.####.#.#....##..##......#..###.#..#.#..#.......#.#......#.#............................
...................................#.#..#...#...#.#......#.#...#.....#.#.#.#.##.##.#..#.#...#......#..#.#.....#...##.......#.#......#.#.............................
......................................#...###.###..#.#......#.##.##.....######..#..#.....#.##.##.....#...#.#....####.#........#.#......#.#..............................
........................................#####.#.#.....#.#........#..#....##.###...#..##.......#..#.....###..#.#..##.##..#........#.#......#.#...............................
.........................................##.###.##.#.....#.#.......#..##..#.#.#...#.#...#.......#..##...##.....#....#..#..##........#.#......#.#................................
..........................................#.#.#.#..#..#.....#.#......#...#...###.##..#.##.##......#...#.##.#.....##...#..#...#.........#.#......#.#.................................
>>> sorted( l for l in rules.split("\n"))
['##### => #', '####. => #', '###.# => #', '###.. => .', '##.## => .', '##.#. => .', '##..# => .', '##... => .', '#.### => #', '#.##. => .', '#.#.# => #', '#.#.. => .', '#..## => .', '#..#. => .', '#...# => #', '#.... => .', '.#### => .', '.###. => .', '.##.# => #', '.##.. => #', '.#.## => .', '.#.#. => #', '.#..# => .', '.#... => #', '..### => #', '..##. => .', '..#.# => .', '..#.. => #', '...## => #', '...#. => .', '....# => .', '..... => .']
>>> print(*sorted( l for l in rules.split("\n")),sep="\n")
##### => #
####. => #
###.# => #
###.. => .
##.## => .
##.#. => .
##..# => .
##... => .
#.### => #
#.##. => .
#.#.# => #
#.#.. => .
#..## => .
#..#. => .
#...# => #
#.... => .
.#### => .
.###. => .
.##.# => #
.##.. => #
.#.## => .
.#.#. => #
.#..# => .
.#... => #
..### => #
..##. => .
..#.# => .
..#.. => #
...## => #
...#. => .
....# => .
..... => .
>>> 
